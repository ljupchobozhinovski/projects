import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import BlogItem from "../components/BlogItem";
import PageTitle from "../components/PageTitle";
import ProductItem from "../components/ProductItem";
import { FeaturedBlogType, FeaturedProductType } from "../Types/types";

interface Props {
  searchedBlogs: FeaturedBlogType[];
  searchedProducts: FeaturedProductType[];
}

const Search: NextPage<Props> = ({ searchedBlogs, searchedProducts }) => {

  return (
    <>
      <Head>
        <title>Store - Search</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <PageTitle title="Search" />

      <div className="bg0 m-t-23 p-b-140 mt-5">
        <div className="container">

          {!!searchedBlogs.length &&
            <>
              <h2 className="mb-5">Blogs</h2>
              <div className="row isotope-grid">

                {searchedBlogs.map((searchedBlog) => {
                  return (
                    <div className="col-4">
                      <BlogItem featuredBlog={searchedBlog} />
                    </div>
                  )
                })}
              </div>
            </>}

          {!!searchedProducts.length &&
            <>
              <h2 className="mb-5">Products</h2>
              <div className="row isotope-grid">
                {searchedProducts.map((searchedProduct) => {
                  return (
                    <ProductItem featuredProduct={searchedProduct} />
                  )
                })}
              </div>

            </>}
        </div>
      </div>
    </>
  );
};

export default Search;

export const getServerSideProps: GetServerSideProps = async ({ query }) => {

  const q = query.q;

  let searchedBlogRes;
  let searchedBlogs: FeaturedBlogType[] = [];
  let searchedProductsRes;
  let searchedProducts: FeaturedProductType[] = [];

  if (q) {
    searchedBlogRes = await fetch(`http://localhost:5001/blogs?q=${q}`);
    searchedBlogs = await searchedBlogRes.json();
    searchedProductsRes = await fetch(`http://localhost:5001/products?q=${q}`);
    searchedProducts = await searchedProductsRes.json()
  }

  return {
    props: {
      searchedBlogs,
      searchedProducts,
    },
  };
};